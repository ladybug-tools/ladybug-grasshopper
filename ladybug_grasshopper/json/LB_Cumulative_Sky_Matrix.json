{
  "version": "1.6.0", 
  "nickname": "SkyMatrix", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "sky_mtx", 
        "description": "A sky matrix object containing the radiation coming from each patch\nof the sky. This can be used for a radiation study, a radition rose,\nor a sky dome visualization. It can also be deconstructed into its\nindividual values with the \"LB Deconstruct Matrix\" component.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "north_", 
      "description": "A number between -360 and 360 for the counterclockwise\ndifference between the North and the positive Y-axis in degrees.\n90 is West and 270 is East. This can also be Vector for the\ndirection to North. (Default: 0)", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_location", 
      "description": "A ladybug Location that has been output from the \"LB Import EPW\"\ncomponent or the \"LB Construct Location\" component.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_direct_rad", 
      "description": "An annual hourly DataCollection of Direct Normal Radiation such\nas that which is output from the \"LB Import EPW\" component or the\n\"LB Import STAT\" component.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_diffuse_rad", 
      "description": "An annual hourly DataCollection of Diffuse Horizontal Radiation\nsuch as that which is output from the \"LB Import EPW\" component or\nthe \"LB Import STAT\" component.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "list", 
      "name": "_hoys_", 
      "description": "A number or list of numbers between 0 and 8760 that respresent\nthe hour(s) of the year for which to generate the sky matrix. The\n\"LB Calculate HOY\" component can output this number given a month,\nday and hour. The \"LB Analysis Period\" component can output a\nlist of HOYs within a certain hour or date range. By default,\nthe matrix will be for the entire year.", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "high_density_", 
      "description": "A Boolean to indicate whether the higher-density Reinhart sky\nmatrix should be generated (True), which has roughly 4 times the sky\npatches as the (default) original Tregenza sky (False). Note that,\nwhile the Reinhart sky has a higher resolution and is more accurate,\nit will result in considerably longer calculation time for incident\nradiation studies. The difference in sky resolution can be observed\nwith the \"LB Sky Dome\" component. (Default: False).", 
      "type": "bool", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_ground_ref_", 
      "description": "A number between 0 and 1 to note the average ground reflectance\nthat is associated with the sky matrix. (Default: 0.2).", 
      "type": "double", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_folder_", 
      "description": "The folder in which the Radiance commands are executed to\nproduce the sky matrix. If None, it will be written to Ladybug's\ndefault EPW folder.", 
      "type": "string", 
      "default": null
    }
  ], 
  "subcategory": "2 :: Visualize Data", 
  "code": "\nimport math\n\ntry:\n    from ladybug_geometry.geometry2d.pointvector import Vector2D\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_geometry:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_radiance.skymatrix import SkyMatrix\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.togeometry import to_vector2d\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\ntry:\n    from lbt_recipes.version import check_radiance_date\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import honeybee_radiance:\\n\\t{}'.format(e))\n\n# check the istalled Radiance date and get the path to the gemdaymtx executable\ncheck_radiance_date()\n\n\nif all_required_inputs(ghenv.Component):\n    # process and set defaults for all of the global inputs\n    if north_ is not None:  # process the north_\n        try:\n            north_ = math.degrees(\n                to_vector2d(north_).angle_clockwise(Vector2D(0, 1)))\n        except AttributeError:  # north angle instead of vector\n            north_ = float(north_)\n    else:\n        north_ = 0\n    ground_r = 0.2 if _ground_ref_ is None else _ground_ref_\n\n    # create the sky matrix object\n    sky_mtx = SkyMatrix.from_components(\n        _location, _direct_rad, _diffuse_rad, _hoys_, north_, high_density_, ground_r)\n    if _folder_:\n        sky_mtx.folder = _folder_\n", 
  "category": "Ladybug", 
  "name": "LB Cumulative Sky Matrix", 
  "description": "Get a matrix containing radiation values from each patch of a sky dome.\n_\nCreating this matrix is a necessary pre-step before doing incident radiation\nanalysis with Rhino geometry or generating a radiation rose.\n_\nThis component uses Radiance's gendaymtx function to calculate the radiation\nfor each patch of the sky. Gendaymtx is written by Ian Ashdown and Greg Ward.\nMorere information can be found in Radiance manual at:\nhttp://www.radiance-online.org/learning/documentation/manual-pages/pdfs/gendaymtx.pdf\n-"
}