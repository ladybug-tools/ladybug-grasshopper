{
  "version": "0.1.1", 
  "nickname": "ToLegacy", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "data", 
        "description": "A Ladybug Legacy list with meatadata and values.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_data", 
      "description": "A Ladybug DataCollection object.", 
      "type": "System.Object", 
      "default": null
    }
  ], 
  "subcategory": "0 :: Import", 
  "code": "\ntry:\n    from ladybug.datacollection import HourlyContinuousCollection, \\\n        MonthlyCollection, DailyCollection, MonthlyPerHourCollection\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n# base header list\nhead = ['key:location/dataType/units/frequency/startsAt/endsAt',\n        'Unkown Location']\n\n\nif all_required_inputs(ghenv.Component):\n    # add the location, data type, and units\n    meta_data = _data.header.metadata\n    if 'city' in meta_data:\n        head[1] = meta_data['city']\n    if 'type' in meta_data:\n        if 'Zone' in meta_data:\n            head.append('{} for {}'.format(meta_data['type'], meta_data['Zone']))\n        elif 'System' in meta_data:\n            head.append('{} for {}'.format(meta_data['type'], meta_data['System']))\n        else:\n            head.append(meta_data['type'])\n    else:\n        head.append(str(_data.header.data_type))\n    head.append(_data.header.unit)\n\n    # add the time interval\n    a_per = _data.header.analysis_period\n    if isinstance(_data, HourlyContinuousCollection):\n        if a_per.timestep == 1:\n            head.append('Hourly')\n        else:\n            head.append('Timestep')\n    elif isinstance(_data, MonthlyCollection):\n        head.append('Monthly')\n    elif isinstance(_data, DailyCollection):\n        head.append('Daily')\n    elif isinstance(_data, MonthlyPerHourCollection):\n        head.append('Monthly-> averaged for each hour')\n    else:\n        raise TypeError(\n            '_data must be a Data Collection. Got {}.'.format(type(_data)))\n\n    # add the analysis period\n    head.append((a_per.st_month, a_per.st_day, a_per.st_hour + 1))\n    head.append((a_per.end_month, a_per.end_day, a_per.end_hour + 1))\n\n    # return the data\n    data = head + list(_data.values)\n", 
  "category": "Ladybug", 
  "name": "LB Data to Legacy", 
  "description": "Convert a Ladybug DataCollection into its Ladybug Legacy format.\n-\nNote that this component is intended to be temporary as people transition from\nLadybug Legacy to Ladybug[+].\n-"
}