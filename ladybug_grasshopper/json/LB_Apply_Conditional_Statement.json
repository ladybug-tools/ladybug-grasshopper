{
  "version": "0.1.3", 
  "nickname": "Statement", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "data", 
        "description": "A list of Data Collections that have been filtered by the statement_.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "list", 
      "name": "_data", 
      "description": "A list of aligned Data Collections to be evaluated against\nthe _statement.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_statement", 
      "description": "A conditional statement as a string (e.g. a > 25).\n_\nThe variable of the first data collection should always be named 'a'\n(without quotations), the variable of the second list should be\nnamed 'b', and so on.\n_\nFor example, if three data collections are connected to _data\nand the following statement is applied:\n'18 < a < 26 and b < 80 and c > 2'\nThe resulting collections will only include values where the first\ndata collection is between 18 and 26, the second collection is less\nthan 80 and the third collection is greater than 2.", 
      "type": "string", 
      "default": null
    }
  ], 
  "subcategory": "1 :: Analyze Data", 
  "code": "\ntry:\n    from ladybug.datacollection import BaseCollection\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\n\nif all_required_inputs(ghenv.Component):\n    for dat in _data:\n        assert isinstance(dat, BaseCollection), '_data must be a data' \\\n            ' collection. Got {}.'.format(type(dat))\n\n    data = BaseCollection.filter_collections_by_statement(\n        _data, _statement)", 
  "category": "Ladybug", 
  "name": "LB Apply Conditional Statement", 
  "description": "Convert a hourly Ladybug data collection to a continuous collection at a\nspecific timestep.\n_\nThis will be done either through linear interpolation or by culling out values\nthat do not fit the timestep.  It can also be used to convert a discontinous\ndata collection to a continuous one by linearly interpolating over holes in\nthe data set.\n-"
}