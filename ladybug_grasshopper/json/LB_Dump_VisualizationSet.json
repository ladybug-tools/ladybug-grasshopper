{
  "version": "1.8.1", 
  "nickname": "DumpVisSet", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "vs_file", 
        "description": "The path of the file where the VisualisationSet is saved. The\n\"LB Preview VisualizationSet\" component can be used to visualize\nthe content from the file back into Grasshopper.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_vis_set", 
      "description": "A VisualizationSet object to be written to a file. This can also be\nVisualizationSet arguments from any Ladybug Tools component with\na vis_set output.", 
      "type": "System.Object", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_format_", 
      "description": "Text or an integer to set the format of the output file.\nChoose from the options below. (Default: SVG).\n* 0 = SVG - Interactive Scaleable Vector Graphic for web browsers\n* 1 = JSON - Cross-language and handles any types of collections\n* 2 = PKL - Compressed format only readable with Python", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_svg_view_", 
      "description": "An optional text string for the view for which the SVG will be generated.\nChoose from the options below. (Default: Top).\n* Top\n* Left\n* Right\n* Front\n* Back\n* NE\n* NW\n* SE\n* SW", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_svg_width_", 
      "description": "The screen width in pixels. (Default: 800).", 
      "type": "int", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_svg_height_", 
      "description": "The screen height in pixels. (Default: 600).", 
      "type": "int", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "legend_2d_", 
      "description": "A boolean to note whether the geometry in the visulaization set\nshould be rendered using the 2D Legend Parameters instead of the 3D\nones. (Default: False).", 
      "type": "bool", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_name_", 
      "description": "A name for the file to which the VisualizationSet will be written.\nThe default is derived from the identifier of the visualization set.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_folder_", 
      "description": "An optional directory into which the VisualizationSet will be\nwritten.  The default is set to a user-specific simulation folder.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_dump", 
      "description": "Set to \"True\" to save the VisualizationSet to a file.", 
      "type": "bool", 
      "default": null
    }
  ], 
  "subcategory": "4 :: Extra", 
  "code": "\nimport os\n\ntry:\n    from ladybug.config import folders\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug:\\n\\t{}'.format(e))\n\ntry:  # import the core ladybug_{{cad}} dependencies\n    from ladybug_{{cad}}.visset import process_vis_set\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\nFORMAT_MAP = {\n    '0': 'svg',\n    '1': 'json',\n    '2': 'pkl',\n    'svg': 'svg',\n    'json': 'json',\n    'pkl': 'pkl'\n}\n\n\nif all_required_inputs(ghenv.Component) and _dump:\n    # extract the VisualizationSet object\n    _vs = process_vis_set(_vis_set)\n\n    # set the component defaults\n    name = _name_ if _name_ is not None else _vs.identifier\n    home_folder = os.getenv('HOME') or os.path.expanduser('~')\n    folder = _folder_ if _folder_ is not None else \\\n        os.path.join(home_folder, 'simulation')\n    file_format = 'svg' if _format_ is None else FORMAT_MAP[_format_.lower()]\n\n    # write the data into the appropriate format\n    if file_format == 'svg':\n        view = 'Top' if _svg_view_ is None else _svg_view_\n        width = 800 if _svg_width_ is None else _svg_width_\n        height = 600 if _svg_height_ is None else _svg_height_\n        if legend_2d_:\n            render_3d_legend, render_2d_legend = False, True\n        else:\n            render_3d_legend, render_2d_legend = True, False\n        svg_obj = _vs.to_svg(width=width, height=height, view=view, interactive=True,\n                             render_3d_legend=render_3d_legend,\n                             render_2d_legend=render_2d_legend)\n        vs_file = svg_obj.to_file(name=name, folder=folder)\n    elif file_format == 'json':\n        vs_file = _vs.to_json(name, folder)\n    elif file_format == 'pkl':\n        vs_file = _vs.to_pkl(name, folder)\n", 
  "category": "Ladybug", 
  "name": "LB Dump VisualizationSet", 
  "description": "Dump a Ladybug VisualiztionSet into a file.\n_\nThe \"LB Preview VisualizationSet\" component can be used to visualize the content\nfrom the file back into Grasshopper.\n-"
}