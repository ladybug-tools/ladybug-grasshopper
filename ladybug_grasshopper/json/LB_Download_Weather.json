{
  "version": "0.2.3", 
  "nickname": "DownloadEPW", 
  "outputs": [
    [
      {
        "access": "None", 
        "name": "epw_file", 
        "description": "The file path of the downloaded epw file.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "stat_file", 
        "description": "The file path of the downloaded stat file.", 
        "type": null, 
        "default": null
      }, 
      {
        "access": "None", 
        "name": "ddy_file", 
        "description": "The file path of the downloaded ddy file.", 
        "type": null, 
        "default": null
      }
    ]
  ], 
  "inputs": [
    {
      "access": "item", 
      "name": "_weather_URL", 
      "description": "Text representing the URL at which the climate data resides. \nTo open the a map interface for all publicly availabe climate data (epwmap),\nuse the \"EPWmap\" component.", 
      "type": "string", 
      "default": null
    }, 
    {
      "access": "item", 
      "name": "_folder_", 
      "description": "An optional file path to a directory into which the weather file\nwill be downloaded and unziped.  If None, the weather files will be\ndownloaded to the ladybug default weather data folder and placed in\na sub-folder with the name of the weather file location.", 
      "type": "string", 
      "default": null
    }
  ], 
  "subcategory": "0 :: Import", 
  "code": "\ntry:\n    from ladybug.futil import unzip_file\n    from ladybug.config import folders\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug:\\n\\t{}'.format(e))\n\ntry:\n    from ladybug_{{cad}}.download import download_file\n    from ladybug_{{cad}}.{{plugin}} import all_required_inputs\nexcept ImportError as e:\n    raise ImportError('\\nFailed to import ladybug_{{cad}}:\\n\\t{}'.format(e))\n\nimport os\n\n\nif all_required_inputs(ghenv.Component):\n    # name for the weather files\n    if _weather_URL.lower().endswith('.zip'):\n        # onebuilding URL type\n        _folder_name = _weather_URL.split('/')[-1][:-4]\n    else:\n        # dept of energy URL type\n        _folder_name = _weather_URL.split('/')[-2]\n    \n    # create default working_dir\n    if _folder_ is None:\n        _folder_ = folders.default_epw_folder\n    try:\n        _folder_.decode('ascii')\n    except UnicodeDecodeError:\n        raise UnicodeDecodeError(\n            '\\nYour download folder \"{}\" contains non-ASCII characters\\n'\n            '\\nUse the _folder_ input to this component to download EPW files'\n            ' to a valid location.'.format(_folder_))\n    else:\n        print 'Files will be downloaded to: {}'.format(_folder_)\n    \n    \n    # default file names\n    epw = os.path.join(_folder_, _folder_name, _folder_name + '.epw')\n    stat = os.path.join(_folder_, _folder_name, _folder_name + '.stat')\n    ddy = os.path.join(_folder_, _folder_name, _folder_name + '.ddy')\n    \n    # download and unzip the files if they do not exist\n    if not os.path.isfile(epw) or not os.path.isfile(stat) or not os.path.isfile(ddy):\n        zip_file_path = os.path.join(_folder_, _folder_name, _folder_name + '.zip')\n        download_file(_weather_URL, zip_file_path, True)\n        unzip_file(zip_file_path)\n    \n    # set output\n    epw_file, stat_file, ddy_file = epw, stat, ddy", 
  "category": "Ladybug", 
  "name": "LB Download Weather", 
  "description": "Automatically download a .zip file from a URL where climate data resides,\nunzip the file, and open .epw, .stat, and ddy weather files.\n-"
}